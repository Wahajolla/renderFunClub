############################  LICENSE  #########################
# <This software package is a plugin for Blender that uses the Crowdrender
# distributed rendering system.>
# Copyright (C) <2013-2021> Crowd Render Pty Limited, Sydney Australia
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# You can contact the creator of Crowdrender at info at
# crowdrender dot com dot au
################################################################

# <sort of PEP8 Compliant, lines are not always 79 chars long>

"""
crowdrender blender python package for crowd accelerated rendering 

This package implements a multi-process, multi-machine distributed 
rendering addon for Blender.

This package exports the following modules:

client - manage a user session across multiple nodes
CROWD_RENDER - define and register a RenderEngine subclass
hash_tree - define a custom hash tree for data checking between nodes
image_recombine - recombine parts of a single image rendered on other nodes
network_engine - manage network traffic between nodes
network_nodes - define a custom node tree for blenders node editor
node_sync - efficiently synchronise node data 
server - manage multiple user sessions on one node
settings - define settings for each scene
ui_operators - define Blender operators
ui_panels - define Blender panels
update_handler - handle events generated by changes to scene data

"""

# IMPORTS------------------------------------------------------------------
import sys, bpy, os


#Set path to include crowdrender so we can import subpackages like zmq

def select_versions():
    """ checks python/blender versions and sets import paths accordingly
    """
    
    global cr_version
    
    this_dir = os.path.split(__file__)[0]
    
    if os.path.exists(this_dir + os.sep + 'cr'):
        
        from . import cr as cr_version
    
    else:
        
        python_version = str(sys.version_info.major) + '.' +\
        str(sys.version_info.minor) + '.' +\
        str(sys.version_info.micro)
                    
        
            
        if sys.version_info.minor == 7:
        
            from . import py_3_7 as cr_version
            
        elif sys.version_info.minor == 8:
            
            from . import py_3_8 as cr_version
            
        elif sys.version_info.minor == 9:
            
            from . import py_3_9 as cr_version
            
            
             # better system on the way, now daily 2.79 blds
            # are using python 3.7.0 we're seeing this
            # method of conditional importing staarting
            # to look stupid, this particular line is 
            # for support of 2.79 daily builds with python
            # 3.7.0 and above.
            
        else:
            raise RuntimeError(" unsupported version of python, you have :" +\
                python_version + " supported versions" +\
                " are 3.7, 3.8 and 3.9")

    



def register():
    
    select_versions()
    

    
    cr_version.register()
    
def unregister():

    if 'cr_version' in globals():
        
        cr_version.unregister()
        
    else:
        print('dodgy, but going to try and unregister anyway')
        
        cr_version.unregister()
        
        # raise RuntimeError("tried to unregister in " + __name__ +\
#             " but cr_version was not there, so could not unregister it!")




if __name__ == '__main__':
    register()
